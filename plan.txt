1. Немного о самом firebase
    1.1 Его возможности 
    1.2 Какие возможности рассмотрим (Какие: аутентификация, база данных)
2. Рассмотрим на примере чата для 2up
    2.1 Страница входа (Регистрация, аутентификация, сохранение сессии)
    2.2 Страница сообщений (Добавить добавление аватара, смену почты, смену пароля, добавить комнаты, добавить )возможность удаления сообщений и редактирования)
    2.3 Безопасность (сессия пользователей, добавление нужной информации, не добавление информации в разные части базы отдним пользователем)
    2.4 

Опционально:
    (
        Подумать расширить анимацию логотипа, попробовать сделать что-то впечатляющее
        Последний кадр ссылка на гитхаб
        На первом кадре ссылка на чат
        На последнем айфрейм чата - возможно будет кто-то писать туда
    )
Слайды:
    Слайд 1 - заставка;
        (
            Можно сделать эффекты ломанных треугольников - как на основном сайте
            Так же можно кастомизировать бейджики в красножелтый цвета базы
        )
    Слайд 2 - План 
        1. Рассмотрим небольшое приложение на VUE
        2. Посмотрим как подкдючается firebase
        3. Рассмотрим работу с аутентификацией, базой данных.
    Слайд 3 - Основные возможности firebase при работе с вебом
        Особенности:
            1. База данных в реальном времени
            2. Аутентификация
            3. Облачное хранилище данных
            4. Хостинг
            5. Пуш уведомления
            6. Куча возможностей для работы с аналитикой, работе с рекламой и многое другое, что может понадобиться при разработке мобильного приложения.
            (
                Поставить иконки с основного сайта
                Пока буду это рассказывать можно показать следующий слайд с остальными возможностями

            )
        Слайд 3.1 Возможно показать остальные возможности с сайта
    Слайд 4 - Особенность базы данных - Она NoSQL
    Слайд 5 - С высоты своего опыта отметил для себя:
        Плюсы: 
        - маштабируемость
        - быстрая работа
        - работа в облаке
        - хранение любых типов данных
        Минусы:
        - из-за отсутствия четкой структуры - сложность со сложной выборкой данных. Поэтому для сложной выборки лучше подходит реляционная база данных
        - сохранность и доступность данных
        - поддержка - реляционные базы имеют богатый опыт и уже давно используются
        (
            Можно выделить плюсы и минусы - добавить иконки
        )
    Слайд 6 - Итак, если:
        - Если надо сделать простой прототип
        - Нет сложной выборки данных
        - Нет требованиям к типу данных
        - Нет еще кучи дополнительных требований которые обычно появляются по ходу.
        
        То NoSQL подходит. Так же можно использовать эти базы данных в связке. 
        
        Отдельно стоит отметить порог входа в эту технологию. Об этом собственно этот пример.

        Если кто хочет углубиться в этот вопрос ссылка на сравнение http://www.cattell.net/datastores/Datastores.pdf


Что рассматривать далее?
    Начинаем рассматривать уже работу в приложении, подключение. Код.

1. Подключение
2. Аутентификация (Регистрация, вход)
3. Сохранение сессии
    3.1 Рассмотреть работу в оффлайне(Почитать, что там и как)
4. Страница чата
    Начать рассматривать по частям.
    Что имеем: Аватар, почту, комнаты?
    Блок управления: Смена аватара, смена пароля, смена почты.
5. Блок сообщений. 
    Что имеем: Удаление, правка сообщений.
    Еще: Разные типы сообщение от Автора, гостя